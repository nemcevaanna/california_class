import streamlit as st  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É Streamlit –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
import requests  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É requests –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –∏–∫–æ–Ω–∫–æ–π –¥–æ–º–∞
st.title('üè† –ü—Ä–æ–≥–Ω–æ–∑ —Ü–µ–Ω—ã –Ω–∞ –∂–∏–ª—å—ë –≤ –ö–∞–ª–∏—Ñ–æ—Ä–Ω–∏–∏')

# –í—ã–≤–æ–¥–∏–º –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
st.markdown("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ–º–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–≥–Ω–æ–∑–∞ —Ü–µ–Ω—ã:")

# –°–æ–∑–¥–∞–µ–º –¥–≤–µ –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è –∫–æ–º–ø–∞–∫—Ç–Ω–æ–≥–æ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
col1, col2 = st.columns(2)

# –í –ø–µ—Ä–≤–æ–π –∫–æ–ª–æ–Ω–∫–µ —Ä–∞–∑–º–µ—â–∞–µ–º –ø–µ—Ä–≤—ã–µ —á–µ—Ç—ã—Ä–µ –ø–æ–ª—è –≤–≤–æ–¥–∞
with col1:
    MedInc = st.number_input(
        "–ú–µ–¥–∏–∞–Ω–Ω—ã–π –¥–æ—Ö–æ–¥ (–≤ –¥–µ—Å—è—Ç–∫–∞—Ö —Ç—ã—Å—è—á $):",
        min_value=0.0, max_value=15.0, value=5.0, step=0.1
    )  # –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –º–µ–¥–∏–∞–Ω–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞ –≤ —Ä–∞–π–æ–Ω–µ (–≤ –¥–µ—Å—è—Ç–∫–∞—Ö —Ç—ã—Å—è—á –¥–æ–ª–ª–∞—Ä–æ–≤)
    HouseAge = st.number_input(
        "–í–æ–∑—Ä–∞—Å—Ç –¥–æ–º–∞ (–ª–µ—Ç):",
        min_value=1, max_value=52, value=20, step=1
    )  # –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞ –¥–æ–º–∞ –≤ –≥–æ–¥–∞—Ö
    AveRooms = st.number_input(
        "–°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç:",
        min_value=1.0, max_value=15.0, value=5.0, step=1.0
    )  # –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ —Å—Ä–µ–¥–Ω–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–æ–º–Ω–∞—Ç –≤ –¥–æ–º–µ
    AveBedrms = st.number_input(
        "–°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–∞–ª–µ–Ω:",
        min_value=1.0, max_value=5.0, value=1.0, step=1.0
    )  # –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ —Å—Ä–µ–¥–Ω–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–ø–∞–ª–µ–Ω –≤ –¥–æ–º–µ

# –í–æ –≤—Ç–æ—Ä–æ–π –∫–æ–ª–æ–Ω–∫–µ —Ä–∞–∑–º–µ—â–∞–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –ø–æ–ª—è –≤–≤–æ–¥–∞
with col2:
    Population = st.number_input(
        "–ù–∞—Å–µ–ª–µ–Ω–∏–µ —Ä–∞–π–æ–Ω–∞:",
        min_value=1, max_value=40000, value=1000, step=1
    )  # –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ —á–∏—Å–ª–µ–Ω–Ω–æ—Å—Ç–∏ –Ω–∞—Å–µ–ª–µ–Ω–∏—è —Ä–∞–π–æ–Ω–∞
    AveOccup = st.number_input(
        "–°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂–∏–ª—å—Ü–æ–≤:",
        min_value=1.0, max_value=1243.0, value=3.0, step=0.1
    )  # –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ —Å—Ä–µ–¥–Ω–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∂–∏–ª—å—Ü–æ–≤ –≤ –¥–æ–º–µ
    Latitude = st.number_input(
        "–®–∏—Ä–æ—Ç–∞:",
        min_value=32.0, max_value=42.0, value=36.0, step=0.01
    )  # –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–π —à–∏—Ä–æ—Ç—ã —Ä–∞–π–æ–Ω–∞
    Longitude = st.number_input(
        "–î–æ–ª–≥–æ—Ç–∞:",
        min_value=-124.0, max_value=-114.0, value=-120.0, step=0.01
    )  # –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–π –¥–æ–ª–≥–æ—Ç—ã —Ä–∞–π–æ–Ω–∞

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞–∂–∞—Ç–∞ –ª–∏ –∫–Ω–æ–ø–∫–∞ "–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑"
if st.button("–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑"):
    # –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏, –≤–≤–µ–¥–µ–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    data = {
        "MedInc": MedInc,
        "HouseAge": HouseAge,
        "AveRooms": AveRooms,
        "AveBedrms": AveBedrms,
        "Population": Population,
        "AveOccup": AveOccup,
        "Latitude": Latitude,
        "Longitude": Longitude
    }
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º URL-–∞–¥—Ä–µ—Å API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–≥–Ω–æ–∑–∞
    url = 'https://california-class.onrender.com/predict'
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST-–∑–∞–ø—Ä–æ—Å –∫ API —Å –¥–∞–Ω–Ω—ã–º–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON
    response = requests.post(url, json=data)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
    if response.status_code == 200:
        try:
            # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ—Ç–≤–µ—Ç –∏–∑ —Ñ–æ—Ä–º–∞—Ç–∞ JSON –≤ —Å–ª–æ–≤–∞—Ä—å
            data = response.json()
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–æ–≥–Ω–æ–∑–∞ —Ü–µ–Ω—ã –∏–∑ –æ—Ç–≤–µ—Ç–∞
            prediction = data.get('prediction')
            if prediction is not None:
                # –ï—Å–ª–∏ –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–ª—É—á–µ–Ω, –≤—ã–≤–æ–¥–∏–º –µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
                st.success(f'üí∞ **–ü—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º–∞—è —Ü–µ–Ω–∞: {prediction * 1000:.2f}$**')
            else:
                # –ï—Å–ª–∏ –≤ –æ—Ç–≤–µ—Ç–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª–µ 'prediction', –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
                st.error("–û—à–∏–±–∫–∞: –û—Ç–≤–µ—Ç API –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–æ–≥–Ω–æ–∑.")
        except ValueError:
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫—É, –µ—Å–ª–∏ –æ—Ç–≤–µ—Ç –Ω–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON
            st.error("–û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç API.")
    else:
        # –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ –Ω–µ 200 OK, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        st.error(f"–û—à–∏–±–∫–∞: API –≤–µ—Ä–Ω—É–ª —Å—Ç–∞—Ç—É—Å {response.status_code}.")